<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_projectile_base_8cpp" kind="file">
    <compoundname>ProjectileBase.cpp</compoundname>
    <includes refid="_projectile_base_8h" local="yes">ProjectileBase.h</includes>
    <includes local="yes">Components/StaticMeshComponent.h</includes>
    <includes local="yes">GameFramework/ProjectileMovementComponent.h</includes>
    <includes local="yes">Kismet/GamePlayStatics.h</includes>
    <includes local="yes">Particles/ParticleSystemComponent.h</includes>
    <includes local="yes">GameFramework/Actor.h</includes>
    <incdepgraph>
      <node id="4">
        <label>ProjectileBase.generated.h</label>
      </node>
      <node id="2">
        <label>CoreMinimal.h</label>
      </node>
      <node id="3">
        <label>GameFramework/Actor.h</label>
      </node>
      <node id="0">
        <label>d:/toontanks/Source/ToonTanks/Actors/ProjectileBase.cpp</label>
        <link refid="ProjectileBase.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>GameFramework/ProjectileMovementComponent.h</label>
      </node>
      <node id="7">
        <label>Kismet/GamePlayStatics.h</label>
      </node>
      <node id="1">
        <label>ProjectileBase.h</label>
        <link refid="_projectile_base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Particles/ParticleSystemComponent.h</label>
      </node>
      <node id="5">
        <label>Components/StaticMeshComponent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Fill<sp/>out<sp/>your<sp/>copyright<sp/>notice<sp/>in<sp/>the<sp/>Description<sp/>page<sp/>of<sp/>Project<sp/>Settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_projectile_base_8h" kindref="compound">ProjectileBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Components/StaticMeshComponent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GameFramework/ProjectileMovementComponent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Kismet/GamePlayStatics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Particles/ParticleSystemComponent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GameFramework/Actor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AProjectileBase::OnHit(UPrimitiveComponent*<sp/>HitComponent,<sp/>AActor*<sp/>OtherActor,<sp/>UPrimitiveComponent*<sp/>OtherComp,<sp/>FVector<sp/>NormalImpulse,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FHitResult&amp;<sp/>Hit)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>get<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>owning<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>AActor*<sp/>MyOwner<sp/>=<sp/>GetOwner();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>for<sp/>some<sp/>reason<sp/>we<sp/>can<sp/>not<sp/>get<sp/>a<sp/>valid<sp/>reference,<sp/>return<sp/>as<sp/>we<sp/>need<sp/>to<sp/>check<sp/>against<sp/>the<sp/>owner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MyOwner)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>other<sp/>actor<sp/>is<sp/>not<sp/>self<sp/>or<sp/>owner<sp/>and<sp/>exists,<sp/>then<sp/>apply<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtherActor<sp/>&amp;&amp;<sp/>OtherActor<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>OtherActor<sp/>!=MyOwner)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UGameplayStatics::ApplyDamage(OtherActor,<sp/><ref refid="class_a_projectile_base_1a96ac5fcd59a5a45fd2e2c5481714c333" kindref="member">Damage</ref>,<sp/>MyOwner-&gt;GetInstigatorController(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_a_projectile_base_1ac849d60d7698562b2cad760dc1523b7c" kindref="member">DamageType</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UGameplayStatics::SpawnEmitterAtLocation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_a_projectile_base_1a731a8596534cdb0f521473b0e43453c0" kindref="member">HitParticle</ref>,<sp/>GetActorLocation());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UGameplayStatics::PlaySoundAtLocation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_a_projectile_base_1a16e50c0fc6343d16b3559b4006945010" kindref="member">HitSound</ref>,<sp/>GetActorLocation());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWorld()-&gt;GetFirstPlayerController()-&gt;ClientPlayCameraShake(<ref refid="class_a_projectile_base_1a46fe281bbde40228cd6e9b0ab6c20ba1" kindref="member">HitShake</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_a_projectile_base_1a3ed718af7af9cc16a898547c3b89e34b" refkind="member"><highlight class="normal"><ref refid="class_a_projectile_base_1a3ed718af7af9cc16a898547c3b89e34b" kindref="member">AProjectileBase::AProjectileBase</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>this<sp/>actor<sp/>to<sp/>call<sp/>Tick()<sp/>every<sp/>frame.<sp/><sp/>You<sp/>can<sp/>turn<sp/>this<sp/>off<sp/>to<sp/>improve<sp/>performance<sp/>if<sp/>you<sp/>don&apos;t<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>PrimaryActorTick.bCanEverTick<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_projectile_base_1a78b8f01b4d9122d3da45b03ead445426" kindref="member">ProjectileMesh</ref><sp/>=<sp/>CreateDefaultSubobject&lt;UStaticMeshComponent&gt;(TEXT(</highlight><highlight class="stringliteral">&quot;Projectile<sp/>Mesh&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>RootComponent<sp/>=<sp/><ref refid="class_a_projectile_base_1a78b8f01b4d9122d3da45b03ead445426" kindref="member">ProjectileMesh</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_projectile_base_1a47b60e4ca757f59df4135c2591179fad" kindref="member">ProjectileMovement</ref><sp/>=<sp/>CreateDefaultSubobject&lt;UProjectileMovementComponent&gt;(TEXT(</highlight><highlight class="stringliteral">&quot;Projectile<sp/>Movement&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_projectile_base_1a6ea6bc82513c04b368eab540e5543a85" kindref="member">ParticleTrail</ref><sp/>=<sp/>CreateDefaultSubobject&lt;UParticleSystemComponent&gt;(TEXT(</highlight><highlight class="stringliteral">&quot;Projectile<sp/>System<sp/>Component&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ParticleTrail-&gt;SetupAttachment(RootComponent);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_projectile_base_1a47b60e4ca757f59df4135c2591179fad" kindref="member">ProjectileMovement</ref>-&gt;InitialSpeed<sp/>=<sp/><ref refid="class_a_projectile_base_1a94fd592ae7494c99ab429ee1feca4532" kindref="member">MovementSpeed</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_projectile_base_1a47b60e4ca757f59df4135c2591179fad" kindref="member">ProjectileMovement</ref>-&gt;MaxSpeed<sp/>=<sp/><ref refid="class_a_projectile_base_1a94fd592ae7494c99ab429ee1feca4532" kindref="member">MovementSpeed</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>InitialLifeSpan<sp/>=<sp/>3.0f;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>the<sp/>game<sp/>starts<sp/>or<sp/>when<sp/>spawned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_a_projectile_base_1a025778aacf1f8b69de87cbf55e89d35d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_projectile_base_1a025778aacf1f8b69de87cbf55e89d35d" kindref="member">AProjectileBase::BeginPlay</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_health_component_8h_1aef98595d38fb202dfac1c8915ca47ce1" kindref="member">Super::BeginPlay</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>UGameplayStatics::PlaySoundAtLocation(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_a_projectile_base_1a95e6589ef1d9a1b9af6405388e1ba45f" kindref="member">LaunchSound</ref>,<sp/>GetActorLocation());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setting<sp/>OnComponentHit<sp/>Event<sp/>(dynamic<sp/>event)<sp/>for<sp/>Projectile<sp/>Bullet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_projectile_base_1a78b8f01b4d9122d3da45b03ead445426" kindref="member">ProjectileMesh</ref>-&gt;OnComponentHit.AddDynamic(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;AProjectileBase::OnHit);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="d:/toontanks/Source/ToonTanks/Actors/ProjectileBase.cpp"/>
  </compounddef>
</doxygen>
